//author:Raviprakash B
//doc:28-01-2020
//program to to implement sparse matrix
#include<stdio.h>
#include<stdlib.h>
struct sparse {
	int row;
	int col;
	int val;
};

//find non zero values
int findNonZero(int a[10][10],int r,int c,int nonZero,int i, int j)
{
	for(i=0;i<r;i++){
                for(j=0;j<c;j++){
                        if(a[i][j]!=0){
                                nonZero++;
                        }
                }
        }
	return (nonZero);
}

//convert 1d to 2d

void convert2d(struct sparse triplet[20],int d[10][10],int i,int j)
{
	int index=1;

	for(i=0;i<triplet[0].row;i++){
		for(j=0;j<triplet[0].col;j++){
			if(i==triplet[index].row && j==triplet[index].col){
				d[i][j]=triplet[index].val;
				index++;
			}
			else
			{
				d[i][j]=0;
			}

		}
	
	}
}
int main()
{
	int i,j,b,a[10][10],r,c,nonZero=0,index=0,val,d[10][10];
	struct  sparse triplet[20];
	printf("Enter the row\n");
	scanf("%d",&r);
	printf("Enter the col\n");
	scanf("%d",&c);
	printf("Enter the array elements\n");
	for(i=0;i<r;i++){
		for(j=0;j<c;j++){
		scanf("%d",&a[i][j]);
		}
	}
	printf("Enter the matrix is\n");
	for(i=0;i<r;i++){
		for(j=0;j<c;j++){
		printf("%d\t",a[i][j]);
		}
		printf("\n");
	}

	//find non zero values
	b=findNonZero(a,r,c,nonZero,i,j);

	triplet[index].row=r;
	triplet[index].col=c;
	triplet[index].val=b;
	index++;

	//maping sparse matrix
	for(i=0;i<r;i++){
                for(j=0;j<c;j++){
                        if(a[i][j]!=0){
                                triplet[index].row=i;
                                triplet[index].col=j;
                                triplet[index].val=a[i][j];
                                index++;
                        }
                }
        }
	
	printf("Row\tColumn\tValue\n");
	for(i = 0; i < index; i++){
		printf("%d\t%d\t%d\n", triplet[i].row, triplet[i].col, triplet[i].val); 
	}

	//convert 2d matrix

	convert2d(triplet,d,i,j);

	printf("\n 2d array is\n");
	for(i=0;i<r;i++){
		for(j=0;j<c;j++){
			printf("%d\t",d[i][j]);
		}
		printf("\n");
	}
	

}


